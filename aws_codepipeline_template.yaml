# IAM Role for CodePipeline
CodePipelineServiceRole:
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Version: 2012-10-17
      Statement:
        - Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
    Policies:
      # Policy for CloudWatch access
      - PolicyName: CloudWatchFullAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action:
                - "cloudwatch:*"
              Effect: Allow
              Resource: "*"
      # Policy for S3 access
      - PolicyName: S3Permissions
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action:
                - "s3:PutObject"
                - "s3:GetObjectAcl"
                - "s3:GetObject"
                - "s3:ListBucket"
                - "s3:GetBucketVersioning"
                - "s3:GetBucketAcl"
                - "s3:GetBucketLocation"
                - "s3:GetObjectVersion"
              Effect: Allow
              Resource: "*"
      # Policy for CodeCommit access
      - PolicyName: CodeCommitPermissions
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action:
                - codecommit:CancelUploadArchive
                - codecommit:GetBranch
                - codecommit:GetCommit
                - codecommit:GetRepository
                - codecommit:GetUploadArchiveStatus
                - codecommit:UploadArchive
              Effect: Allow
              Resource: "*"
      # Policy for CodeBuild access
      - PolicyName: CodeBuildPermissions
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action:
                - codebuild:BatchGetBuilds
                - codebuild:StartBuild
                - codebuild:BatchGetBuildBatches
                - codebuild:StartBuildBatch
              Effect: Allow
              Resource: "*"

# CodePipeline definition
SampleCodePipeline:
  Type: AWS::CodePipeline::Pipeline
  DependsOn: [CodeCommitRepo]
  Properties:
    ArtifactStore:
      Type: S3
      Location: !Ref CodePipelineArtifactStoreS3Bucket
    Name: !Ref CodePipelineName
    RoleArn: !GetAtt CodePipelineServiceRole.Arn
    Stages:
      # Source stage: Pull from CodeCommit
      - Name: Source
        Actions:
          - Name: Source
            ActionTypeId:
              Category: Source
              Owner: AWS
              Version: "1"
              Provider: CodeCommit
            OutputArtifacts:
              - Name: SourceArtifact
            Configuration:
              RepositoryName: "NewsletterRepo"
              BranchName: "main"
      # Deploy stage: Use CodeDeploy
      - Name: Deploy
        Actions:
          - Name: Deploy
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: "1"
              Provider: CodeDeploy
            Configuration:
              ApplicationName: !Ref CodeDeployApplication
              DeploymentGroupName: !Ref DeploymentGroup
            InputArtifacts:
              - Name: SourceArtifact
      # Acceptance Test stage: Use CodeBuild
      - Name: AcceptanceTest
        Actions:
          - Name: AcceptanceTest
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: "1"
            Configuration:
              ProjectName: NewsletterBuild
            InputArtifacts:
              - Name: SourceArtifact
            OutputArtifacts:
              - Name: BuildArtifact

# EC2 Instance Profile Role for CodeDeploy
EC2InstanceProfileRoleForCodeDeploy:
  Type: "AWS::IAM::Role"
  Properties:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal:
            Service:
              - "ec2.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy"
      - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"

# EC2 Instance Profile
EC2InstanceprofileforCodeDeploy:
  Type: AWS::IAM::InstanceProfile
  Properties:
    Roles:
      - !Ref EC2InstanceProfileRoleForCodeDeploy

# EC2 Instance
EC2Instance:
  Type: AWS::EC2::Instance
  CreationPolicy:
    ResourceSignal:
      Timeout: PT15M
  Properties:
    IamInstanceProfile: !Ref EC2InstanceprofileforCodeDeploy
    ImageId: !Ref AmiId
    InstanceType: t2.micro
    SecurityGroupIds:
      - !Ref WebSecurityGroup
    SubnetId: !Ref PublicSubnet1
    Tags:
      - Key: Name
        Value: CodePipelineBlog
    UserData:
      Fn::Base64: !Sub |
        #!/bin/bash -xe
        # Update and install required packages
        yum -y update
        yum install -y ruby
        yum install -y aws-cli
        cd /home/ec2-user
        # Download and install CodeDeploy agent
        aws s3 cp s3://aws-codedeploy-${AWS::Region}/latest/install . --region ${AWS::Region}
        chmod +x ./install
        ./install auto
        # Signal CloudFormation that the instance is ready
        /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}

# CodeDeploy Service Role
CodeDeployServiceRole:
  Type: "AWS::IAM::Role"
  Properties:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal:
            Service:
              - "codedeploy.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"

# CodeDeploy Application
CodeDeployApplication:
  Type: AWS::CodeDeploy::Application
  DependsOn: EC2Instance
  Properties:
    ApplicationName: CodePipeBlogSampleApplication
    ComputePlatform: Server

# CodeDeploy Deployment Group
DeploymentGroup:
  Type: AWS::CodeDeploy::DeploymentGroup
  Properties:
    ApplicationName: !Ref CodeDeployApplication
    DeploymentGroupName: MyDemoDeploymentGroup
    DeploymentConfigName: CodeDeployDefault.AllAtOnce
    DeploymentStyle:
      DeploymentOption: WITHOUT_TRAFFIC_CONTROL
      DeploymentType: IN_PLACE
    Ec2TagFilters:
      - Key: Name
        Value: CodePipelineBlog
        Type: KEY_AND_VALUE
    ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn

# CodeCommit Repository
CodeCommitRepo:
  Type: AWS::CodeCommit::Repository
  Properties:
    RepositoryName: NewsletterRepo
    RepositoryDescription: This is a repository for my project with code from a source S3 bucket.
    Code:
      BranchName: main
      S3:
        Bucket: aws-tc-largeobjects
        Key: DEV-AWS-MO-DevOps-C2/downloads/Blog.zip

# CodeBuild IAM Policy
CodeBuildPolicy:
  Description: Setting IAM policy for service role for CodeBuild
  Properties:
    PolicyDocument:
      Statement:
        - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Effect: Allow
          Resource: "*"
        - Action:
            - ec2:Describe*
          Effect: Allow
          Resource: "*"
        - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
          Effect: Allow
          Resource:
            - !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref "CodePipelineArtifactStoreS3Bucket"
            - !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref "CodePipelineArtifactStoreS3Bucket"
                - /*
    PolicyName: !Join
      - "-"
      - - !Ref "AWS::StackName"
        - CodeBuildPolicy2
    Roles:
      - !Ref "CodeBuildRole"
  Type: AWS::IAM::Policy

# CodeBuild Project
CodeBuildProject:
  DependsOn:
    - CodeBuildPolicy
  Properties:
    Artifacts:
      Type: NO_ARTIFACTS
    BadgeEnabled: true
    Description: !Join
      - ""
      - - "CodeBuild Project for "
        - !Ref "AWS::StackName"
    Environment:
      ComputeType: BUILD_GENERAL1_SMALL
      Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      Type: LINUX_CONTAINER
    Name: NewsletterBuild
    ServiceRole: !Ref "CodeBuildRole"
    Source:
      Type: CODECOMMIT
      BuildSpec: "acctests-buildspec.yml"
      Location: !Join
        - ""
        - - "https://git-codecommit."
          - !Ref "AWS::Region"
          - ".amazonaws.com/v1/repos/NewsletterRepo"
  Type: AWS::CodeBuild::Project

# CodeBuild IAM Role
CodeBuildRole:
  Description: Creating service role in IAM for AWS CodeBuild
  Properties:
    AssumeRolePolicyDocument:
      Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
    Path: /
    RoleName: !Join
      - "-"
      - - !Ref "AWS::StackName"
        - CodeBuild
  Type: AWS::IAM::Role

# Outputs section
Outputs:
  EC2InstancePublicDNSName:
    Description: Public DNS name of the launched EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName
    Export:
      Name: EC2InstancePublicDNSName
  EC2InstanceId:
    Description: Instance ID of the launched EC2 instance
    Value: !Ref EC2Instance
    Export:
      Name: EC2InstanceId
